name: Publish Windows

on:
  release:
    types: [created]


jobs:    
  build:
    runs-on: windows-latest
    env:
      KVXOPT_BUILD_GSL: 0
      KVXOPT_BUILD_FFTW: 0
      KVXOPT_BUILD_GLPK: 0
      KVXOPT_BUILD_DSDP: 0
      KVXOPT_MSVC: 1
      SUITESPARSE_VERSION: 5.8.1
      SUITESPARSE_SHA256: 06726e471fbaa55f792578f9b4ab282ea9d008cf39ddcc3b42b73400acddef40
      OPENBLAS_VERSION: 0.3.10

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        suite-sparse: [src_suitesparse]
        ARCH: [x64, x86]
        include:
        - ARCH: x64
          VC_TARGET: 64
          PYTHON_TARGET: win-amd64
        - ARCH: x86
          VC_TARGET: 32
          PYTHON_TARGET: win32


    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.ARCH}}

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coveralls wheel twine


      - name: Download openblas
        run: |
            Invoke-WebRequest  https://github.com/xianyi/OpenBLAS/releases/download/v${{ env.OPENBLAS_VERSION }}/OpenBLAS-${{ env.OPENBLAS_VERSION }}-${{ matrix.ARCH }}.zip -OutFile OpenBLAS-${{ env.OPENBLAS_VERSION }}-${{ matrix.ARCH }}.zip
            Invoke-WebRequest https://raw.githubusercontent.com/xianyi/OpenBLAS/v${{ env.OPENBLAS_VERSION }}/LICENSE -OutFile OpenBLAS_LINCENSE
            Expand-Archive OpenBLAS-${{ env.OPENBLAS_VERSION }}-${{ matrix.ARCH }}.zip
            echo "KVXOPT_BLAS_LIB_DIR=${{ github.workspace}}/OpenBLAS-${{ env.OPENBLAS_VERSION }}-${{ matrix.ARCH }}/lib" >> $GITHUB_ENV
            echo "KVXOPT_LAPACK_LIB=libopenblas" >> $GITHUB_ENV
            echo "KVXOPT_BLAS_LIB=libopenblas" >> $GITHUB_ENV

      - name: Config suite-sparse source
        shell: msys2 {0}
        run: |
            wget https://github.com/DrTimothyAldenDavis/SuiteSparse/archive/v${{ env.SUITESPARSE_VERSION }}.tar.gz
            echo "${SUITESPARSE_SHA256}  v${{ env.SUITESPARSE_VERSION }}.tar.gz" > SuiteSparse.sha256
            tar -xf v${{ env.SUITESPARSE_VERSION }}.tar.gz
            echo "KVXOPT_SUITESPARSE_SRC_DIR=${{ github.workspace}}/SuiteSparse-${{ env.SUITESPARSE_VERSION }}" >> $GITHUB_ENV


      - name: Cofigure Visual Studio 2019
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ matrix.VC_TARGET }}.bat"
        shell: cmd

      - name: Install (windows)
        run: |
          python setup.py build
          copy OpenBLAS-${{ env.OPENBLAS_VERSION }}-${{ matrix.ARCH }}\bin\libopenblas.dll build\lib.${{ matrix.PYTHON_TARGET }}-${{ matrix.python-version }}\kvxopt
          copy OpenBLAS_LINCENSE build\lib.${{ matrix.PYTHON_TARGET }}-${{ matrix.python-version }}\kvxopt
          python setup.py bdist_wheel
        shell: cmd

      - uses: actions/upload-artifact@v2
        with:
          name: windows-wheels
          path: dist/*.whl

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*.whl